/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil/router";
export namespace Components {
    interface AppRoot {
    }
    interface PageAlbums {
    }
    interface PageArtists {
    }
    interface PageGenres {
    }
    interface PageHome {
    }
    interface PagePlaylist {
        "match": MatchResults;
    }
    interface PageProfile {
        "match": MatchResults;
    }
    interface PageTracks {
    }
    interface PlayTrack {
        "track_id": number;
    }
    interface PlayerControls {
        "audio": HTMLAudioElement;
        "pause": () => Promise<void>;
        "play": () => Promise<void>;
        "set_track": (track_number: number) => Promise<void>;
    }
    interface ProgressBar {
    }
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLPageAlbumsElement extends Components.PageAlbums, HTMLStencilElement {
    }
    var HTMLPageAlbumsElement: {
        prototype: HTMLPageAlbumsElement;
        new (): HTMLPageAlbumsElement;
    };
    interface HTMLPageArtistsElement extends Components.PageArtists, HTMLStencilElement {
    }
    var HTMLPageArtistsElement: {
        prototype: HTMLPageArtistsElement;
        new (): HTMLPageArtistsElement;
    };
    interface HTMLPageGenresElement extends Components.PageGenres, HTMLStencilElement {
    }
    var HTMLPageGenresElement: {
        prototype: HTMLPageGenresElement;
        new (): HTMLPageGenresElement;
    };
    interface HTMLPageHomeElement extends Components.PageHome, HTMLStencilElement {
    }
    var HTMLPageHomeElement: {
        prototype: HTMLPageHomeElement;
        new (): HTMLPageHomeElement;
    };
    interface HTMLPagePlaylistElement extends Components.PagePlaylist, HTMLStencilElement {
    }
    var HTMLPagePlaylistElement: {
        prototype: HTMLPagePlaylistElement;
        new (): HTMLPagePlaylistElement;
    };
    interface HTMLPageProfileElement extends Components.PageProfile, HTMLStencilElement {
    }
    var HTMLPageProfileElement: {
        prototype: HTMLPageProfileElement;
        new (): HTMLPageProfileElement;
    };
    interface HTMLPageTracksElement extends Components.PageTracks, HTMLStencilElement {
    }
    var HTMLPageTracksElement: {
        prototype: HTMLPageTracksElement;
        new (): HTMLPageTracksElement;
    };
    interface HTMLPlayTrackElement extends Components.PlayTrack, HTMLStencilElement {
    }
    var HTMLPlayTrackElement: {
        prototype: HTMLPlayTrackElement;
        new (): HTMLPlayTrackElement;
    };
    interface HTMLPlayerControlsElement extends Components.PlayerControls, HTMLStencilElement {
    }
    var HTMLPlayerControlsElement: {
        prototype: HTMLPlayerControlsElement;
        new (): HTMLPlayerControlsElement;
    };
    interface HTMLProgressBarElement extends Components.ProgressBar, HTMLStencilElement {
    }
    var HTMLProgressBarElement: {
        prototype: HTMLProgressBarElement;
        new (): HTMLProgressBarElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "page-albums": HTMLPageAlbumsElement;
        "page-artists": HTMLPageArtistsElement;
        "page-genres": HTMLPageGenresElement;
        "page-home": HTMLPageHomeElement;
        "page-playlist": HTMLPagePlaylistElement;
        "page-profile": HTMLPageProfileElement;
        "page-tracks": HTMLPageTracksElement;
        "play-track": HTMLPlayTrackElement;
        "player-controls": HTMLPlayerControlsElement;
        "progress-bar": HTMLProgressBarElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface PageAlbums {
    }
    interface PageArtists {
    }
    interface PageGenres {
    }
    interface PageHome {
    }
    interface PagePlaylist {
        "match"?: MatchResults;
    }
    interface PageProfile {
        "match"?: MatchResults;
    }
    interface PageTracks {
    }
    interface PlayTrack {
        "track_id"?: number;
    }
    interface PlayerControls {
        "audio"?: HTMLAudioElement;
    }
    interface ProgressBar {
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "page-albums": PageAlbums;
        "page-artists": PageArtists;
        "page-genres": PageGenres;
        "page-home": PageHome;
        "page-playlist": PagePlaylist;
        "page-profile": PageProfile;
        "page-tracks": PageTracks;
        "play-track": PlayTrack;
        "player-controls": PlayerControls;
        "progress-bar": ProgressBar;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "page-albums": LocalJSX.PageAlbums & JSXBase.HTMLAttributes<HTMLPageAlbumsElement>;
            "page-artists": LocalJSX.PageArtists & JSXBase.HTMLAttributes<HTMLPageArtistsElement>;
            "page-genres": LocalJSX.PageGenres & JSXBase.HTMLAttributes<HTMLPageGenresElement>;
            "page-home": LocalJSX.PageHome & JSXBase.HTMLAttributes<HTMLPageHomeElement>;
            "page-playlist": LocalJSX.PagePlaylist & JSXBase.HTMLAttributes<HTMLPagePlaylistElement>;
            "page-profile": LocalJSX.PageProfile & JSXBase.HTMLAttributes<HTMLPageProfileElement>;
            "page-tracks": LocalJSX.PageTracks & JSXBase.HTMLAttributes<HTMLPageTracksElement>;
            "play-track": LocalJSX.PlayTrack & JSXBase.HTMLAttributes<HTMLPlayTrackElement>;
            "player-controls": LocalJSX.PlayerControls & JSXBase.HTMLAttributes<HTMLPlayerControlsElement>;
            "progress-bar": LocalJSX.ProgressBar & JSXBase.HTMLAttributes<HTMLProgressBarElement>;
        }
    }
}
