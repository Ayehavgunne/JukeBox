/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil/router";
export namespace Components {
    interface AppAlbums {
    }
    interface AppArtists {
    }
    interface AppGenres {
    }
    interface AppHome {
    }
    interface AppPlaylist {
        "match": MatchResults;
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
    }
    interface AppTracks {
    }
    interface PlayButton {
    }
    interface PlayerControls {
    }
    interface TrackRow {
    }
    interface TrackTable {
    }
}
declare global {
    interface HTMLAppAlbumsElement extends Components.AppAlbums, HTMLStencilElement {
    }
    var HTMLAppAlbumsElement: {
        prototype: HTMLAppAlbumsElement;
        new (): HTMLAppAlbumsElement;
    };
    interface HTMLAppArtistsElement extends Components.AppArtists, HTMLStencilElement {
    }
    var HTMLAppArtistsElement: {
        prototype: HTMLAppArtistsElement;
        new (): HTMLAppArtistsElement;
    };
    interface HTMLAppGenresElement extends Components.AppGenres, HTMLStencilElement {
    }
    var HTMLAppGenresElement: {
        prototype: HTMLAppGenresElement;
        new (): HTMLAppGenresElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppPlaylistElement extends Components.AppPlaylist, HTMLStencilElement {
    }
    var HTMLAppPlaylistElement: {
        prototype: HTMLAppPlaylistElement;
        new (): HTMLAppPlaylistElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppTracksElement extends Components.AppTracks, HTMLStencilElement {
    }
    var HTMLAppTracksElement: {
        prototype: HTMLAppTracksElement;
        new (): HTMLAppTracksElement;
    };
    interface HTMLPlayButtonElement extends Components.PlayButton, HTMLStencilElement {
    }
    var HTMLPlayButtonElement: {
        prototype: HTMLPlayButtonElement;
        new (): HTMLPlayButtonElement;
    };
    interface HTMLPlayerControlsElement extends Components.PlayerControls, HTMLStencilElement {
    }
    var HTMLPlayerControlsElement: {
        prototype: HTMLPlayerControlsElement;
        new (): HTMLPlayerControlsElement;
    };
    interface HTMLTrackRowElement extends Components.TrackRow, HTMLStencilElement {
    }
    var HTMLTrackRowElement: {
        prototype: HTMLTrackRowElement;
        new (): HTMLTrackRowElement;
    };
    interface HTMLTrackTableElement extends Components.TrackTable, HTMLStencilElement {
    }
    var HTMLTrackTableElement: {
        prototype: HTMLTrackTableElement;
        new (): HTMLTrackTableElement;
    };
    interface HTMLElementTagNameMap {
        "app-albums": HTMLAppAlbumsElement;
        "app-artists": HTMLAppArtistsElement;
        "app-genres": HTMLAppGenresElement;
        "app-home": HTMLAppHomeElement;
        "app-playlist": HTMLAppPlaylistElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "app-tracks": HTMLAppTracksElement;
        "play-button": HTMLPlayButtonElement;
        "player-controls": HTMLPlayerControlsElement;
        "track-row": HTMLTrackRowElement;
        "track-table": HTMLTrackTableElement;
    }
}
declare namespace LocalJSX {
    interface AppAlbums {
    }
    interface AppArtists {
    }
    interface AppGenres {
    }
    interface AppHome {
    }
    interface AppPlaylist {
        "match"?: MatchResults;
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
    }
    interface AppTracks {
    }
    interface PlayButton {
    }
    interface PlayerControls {
    }
    interface TrackRow {
    }
    interface TrackTable {
    }
    interface IntrinsicElements {
        "app-albums": AppAlbums;
        "app-artists": AppArtists;
        "app-genres": AppGenres;
        "app-home": AppHome;
        "app-playlist": AppPlaylist;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "app-tracks": AppTracks;
        "play-button": PlayButton;
        "player-controls": PlayerControls;
        "track-row": TrackRow;
        "track-table": TrackTable;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-albums": LocalJSX.AppAlbums & JSXBase.HTMLAttributes<HTMLAppAlbumsElement>;
            "app-artists": LocalJSX.AppArtists & JSXBase.HTMLAttributes<HTMLAppArtistsElement>;
            "app-genres": LocalJSX.AppGenres & JSXBase.HTMLAttributes<HTMLAppGenresElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-playlist": LocalJSX.AppPlaylist & JSXBase.HTMLAttributes<HTMLAppPlaylistElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-tracks": LocalJSX.AppTracks & JSXBase.HTMLAttributes<HTMLAppTracksElement>;
            "play-button": LocalJSX.PlayButton & JSXBase.HTMLAttributes<HTMLPlayButtonElement>;
            "player-controls": LocalJSX.PlayerControls & JSXBase.HTMLAttributes<HTMLPlayerControlsElement>;
            "track-row": LocalJSX.TrackRow & JSXBase.HTMLAttributes<HTMLTrackRowElement>;
            "track-table": LocalJSX.TrackTable & JSXBase.HTMLAttributes<HTMLTrackTableElement>;
        }
    }
}
